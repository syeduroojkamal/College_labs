@author: Priyanka Sharma

a = 20
print(type(a))

b=10.34
print(type(b))

c = 'hello'
print(type(c))

d = "hello"
print(type(d))

e = """hello"""
print(type(e))

ch = """c"""
print(type(c))

f = input("Enter any value")
print(f)
print(type(f))

cast_value = int(f)
print(type(cast_value))

g = int(input("Enter any value"))
print(g)
print(type(g))

name = input("Enter nay name")
print(name)
print(type(name))

import math
print(math.sqrt((4)))

import sys
a = int(sys.argv[1])
b = int(sys.argv[2])
print(a+b)

python filename.py 12 13

print('run')
a=[1,2,3,4,5]
b=[1,2,3,4,5]
print(a/b)


#Lists in Pyhton
# Empty List 
L=[]
print(L)
print(type(L))


L1= [10, 20, 30, 40, 50]
print(L1)
print(type(L1))

L2= [10.1, 20.1, 30.2, 40.2, 50.4]
print(L2)
print(type(L2))


fruits= ['Apple', 'Banana', 'Mango', 'Strawberry']
print(fruits)
print(type(fruits))


info = [101, 'name', 23, 10400.50, 'Jaipur', 7891234562]

print(info)

print(info[0])

print(info[4])
print(info[2])

print(info[-1])

print(info[0:6])

print(info[0:5])

print(info[:])

print(info[0:4])
print(info[:4])

print(info[3:6])
print(info[3:])
print(info[-3:6])

print(info[-1:2])

print(info[-3:0])
print(info[-3:])

print(info[0:6:2])
print(info[::-2])


nest = [100, ['name', 23], 'jaipur', 7891234562]
print(nest)
print(len(nest))
print(nest[0])
print(nest[1])
print(nest[2])
print(nest[3])
print(nest[1][1])
print(nest[1][0])
nest.insert(5, 100)
print(nest)


#List Operations
nest.append('Hello')
print(nest)
print(len(nest))


for i in range(1,11):
    nest.append(i)
    
print(nest)
print(len(nest))   

nest1 = ['Welcome to skit', 'Jagatpura'] 
nest.append(nest1)
print(nest)
print(len(nest))


nest.insert(1,35698.45)
print(nest)
print(len(nest))


nest.extend([11,12,13])
print(nest)
print(len(nest))

print(nest[0])
print(nest[1])
print(nest[2])
print(nest[2][1])


for i in range(1,11):
    nest.remove(i)
    
print(nest)
print(len(nest)) 

for i in range(11,13):
    nest.remove(i)
    
print(nest)
print(len(nest)) 


nest.pop()
print(nest)
print(len(nest))

nest.pop()
print(nest)
print(len(nest))

nest.remove(nest[2][0])
print(nest)
print(len(nest))




nest = [100, ['name', 23], 'jaipur', 7891234562, 100]
val  =100
for i in nest:
    if(i == val):
        nest.remove(val)
print(nest)    
   
#tuple
t = (100, 'name', 23, 'jaipur', 7891234562)
print(t)
print(type(t))
print(t[4]) 
t[2] = "Updation"

#List of tuple
list_of_tuple = [(12,'A',183), (18,'B'), (52,'C'), 7]
print(list_of_tuple)

print(type(list_of_tuple))

print(list_of_tuple[0])

print(list_of_tuple[3])


input("Enter list elements")
l = list(map(int, input().split(',')))
print(l)

a = [int(x) for x in input().split()]
print(a)
print(type(a))
'''
t = tuple(int(x) for x in input().split())
print(t)
print(type(t))
'''
t1 = tuple(map(int, input().split()))
t = tuple(int(x.strip() for x in input().split))
   
#Sets (Curly brackets)  unordered, unchangeable(Mutuable), no duplicate elements
fruit_set = {"Apple", "Banana", "Mango", "Strawberry"}
print(fruit_set)
print(type(fruit_set))
print(len(fruit_set))

s1 = {100, 200, 300}
print(s1)
print(type(s1))
print(len(s1))
 
sb = {True, False, True, True, False}
print(sb)
print(type(sb))
print(len(sb))

new_set = {"Name", 101, 24, "Jaipur", 7894561234}
print(new_set)
print(type(new_set))
print(len(new_set))

#empty set 
s9=set()
print(s9)
print(type(s9))
print(len(s9))

#set()
s = set((1,2,3,4))
print(s)
print(type(s))
s.add(10)
s.remove(2)
print(s) #1, 3, 4,10

#frozen sets - Immutable

fs1 = frozenset(['A', 'C', 'Z'])
print(fs1)
print(type(fs1))
print(len(fs1))
#fs.add(10)
#print(fs)
fs2 = frozenset([90,8,28])
fs3 = fs1 | fs2
print(fs3)


#union - union() or |
union_set = new_set.union(s)
print(union_set)

s3 = s1 | sb
print(s3) 

#intersection - common elements (intersection() or &)
s4 = s3 & s1
print(s4)

#difference (A-B)
A = {10, 20, 30,40,50,70}   
B = {50,70,100,30,60,10}    

#print(A.difference(B))    # (A-B)
print(A-B)
print(B.difference(A))     # (B-A) 


s5={1,2,3,4,5,6}
print(s5)
s5.clear()
print(s5)
'''
